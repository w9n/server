name: Cypress

on:
  pull_request:
  push:
    branches:
      - master
      - stable*

env:
  APP_NAME: viewer
  BRANCH: ${{ github.ref }}
  TESTING: true

jobs:
  init:
    runs-on: ubuntu-latest

    if: ${{ github.repository_owner != 'nextcloud-gmbh' }}

    steps:
      - name: Checkout server
        uses: actions/checkout@v3

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.2
        id: versions
        with:
          fallbackNode: "^12"
          fallbackNpm: "^6"

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Install dependencies & build app
        run: |
          npm ci
          TESTING=true npm run build --if-present

      - name: Save context
        uses: actions/cache@v3
        with:
          key: cypress-context-${{ github.run_id }}
          path: /home/runner/work/server

  cypress:
    runs-on: ubuntu-latest
    needs: init

    strategy:
      fail-fast: false
      matrix:
        # run multiple copies of the current job in parallel
        containers: ["component", 1, 2]

    name: runner ${{ matrix.containers }}

    steps:
      - name: Restore context
        uses: actions/cache@v3
        with:
          key: cypress-context-${{ github.run_id }}
          path: /home/runner/work/server

      - name: Run ${{ matrix.containers == 'component' && 'component' || 'E2E' }} cypress tests

        uses: cypress-io/github-action@v5
        with:
          record: true
          parallel: true
          # cypress run type
          component: ${{ matrix.containers == 'component' }}
          group: Run ${{ matrix.containers == 'component' && 'component' || 'E2E' }}
          # cypress env
          ci-build-id: ${{ github.sha }}-${{ github.run_number }}
          tag: ${{ github.event_name }}t
        env:
          # Needs to be prefixed with CYPRESS_
          CYPRESS_BRANCH: ${{ env.BRANCH }}
          CYPRESS_GH: true
          # https://github.com/cypress-io/github-action/issues/124
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          # Needed for some specific code workarounds
          TESTING: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Extract NC logs
        if: failure() && matrix.containers != 'component'
        run: docker logs nextcloud-cypress-tests-server > nextcloud.log

      - name: Upload NC logs
        uses: actions/upload-artifact@v3
        if: failure() && matrix.containers != 'component'
        with:
          name: nc_logs_${{ matrix.containers }}
          path: nextcloud.log

      - name: Create data dir archive
        if: failure() && matrix.containers != 'component'
        run: docker exec nextcloud-cypress-tests-server tar -cvjf - data > data.tar

      - name: Upload data dir archive
        uses: actions/upload-artifact@v3
        if: failure() && matrix.containers != 'component'
        with:
          name: nc_data_${{ matrix.containers }}
          path: data.tar

  summary:
    runs-on: ubuntu-latest
    needs: [init, cypress]

    if: always()

    name: cypress-summary

    steps:
      - name: Summary status
        run: if ${{ needs.init.result != 'success' || ( needs.cypress.result != 'success' && needs.cypress.result != 'skipped' ) }}; then exit 1; fi
